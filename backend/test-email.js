const nodemailer = require('nodemailer');
require('dotenv').config();

async function testEmail() {
    console.log('üìß ƒêang test g·ª≠i email...\n');
    
    // Ki·ªÉm tra c·∫•u h√¨nh
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
        console.error('‚ùå L·ªói: EMAIL_USER ho·∫∑c EMAIL_PASS ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh trong .env');
        console.log('\nüí° H√£y t·∫°o file .env v·ªõi:');
        console.log('EMAIL_HOST=smtp.gmail.com');
        console.log('EMAIL_PORT=587');
        console.log('EMAIL_USER=your-email@gmail.com');
        console.log('EMAIL_PASS=your-app-password');
        return;
    }

    console.log('‚úÖ ƒê√£ t√¨m th·∫•y c·∫•u h√¨nh email:');
    console.log(`   EMAIL_HOST: ${process.env.EMAIL_HOST || 'smtp.gmail.com'}`);
    console.log(`   EMAIL_PORT: ${process.env.EMAIL_PORT || '587'}`);
    console.log(`   EMAIL_USER: ${process.env.EMAIL_USER}\n`);

    try {
        const transporter = nodemailer.createTransport({
            host: process.env.EMAIL_HOST || 'smtp.gmail.com',
            port: parseInt(process.env.EMAIL_PORT || '587'),
            secure: false,
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASS,
            },
        });

        // Test k·∫øt n·ªëi
        console.log('üîç ƒêang ki·ªÉm tra k·∫øt n·ªëi SMTP...');
        await transporter.verify();
        console.log('‚úÖ K·∫øt n·ªëi SMTP th√†nh c√¥ng!\n');

        // G·ª≠i test email
        console.log('üì§ ƒêang g·ª≠i email test...');
        const info = await transporter.sendMail({
            from: `"MedBooking Test" <${process.env.EMAIL_USER}>`,
            to: process.env.EMAIL_USER, // G·ª≠i cho ch√≠nh m√¨nh ƒë·ªÉ test
            subject: 'Test Email t·ª´ MedBooking',
            html: `
                <h2>Email test th√†nh c√¥ng! üéâ</h2>
                <p>N·∫øu b·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y, c√≥ nghƒ©a l√† c·∫•u h√¨nh email ƒë√£ ho·∫°t ƒë·ªông.</p>
                <p>Email ƒë∆∞·ª£c g·ª≠i t·ª´: ${process.env.EMAIL_USER}</p>
            `,
        });

        console.log('‚úÖ Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!');
        console.log(`   Message ID: ${info.messageId}`);
        console.log(`   ƒê√£ g·ª≠i ƒë·∫øn: ${process.env.EMAIL_USER}`);
        console.log('\nüì¨ Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ (c√≥ th·ªÉ trong th∆∞ m·ª•c spam)');

    } catch (error) {
        console.error('\n‚ùå L·ªói khi g·ª≠i email:');
        console.error(`   ${error.message}`);
        
        if (error.code === 'EAUTH') {
            console.error('\nüí° L·ªói x√°c th·ª±c:');
            console.error('   - Ki·ªÉm tra l·∫°i EMAIL_USER v√† EMAIL_PASS');
            console.error('   - ƒê·ªëi v·ªõi Gmail, c·∫ßn d√πng App Password (kh√¥ng ph·∫£i m·∫≠t kh·∫©u th√¥ng th∆∞·ªùng)');
        } else if (error.code === 'ECONNECTION') {
            console.error('\nüí° L·ªói k·∫øt n·ªëi:');
            console.error('   - Ki·ªÉm tra k·∫øt n·ªëi internet');
            console.error('   - Ki·ªÉm tra firewall c√≥ ch·∫∑n port 587 kh√¥ng');
        }
    }
}

testEmail();

